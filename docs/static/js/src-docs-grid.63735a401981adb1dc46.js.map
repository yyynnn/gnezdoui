{"version":3,"sources":["C:/Users/Tom/gnezdoui/playground/colors/Colors.js","C:/Users/Tom/gnezdoui/playground/grid/Grid.js","C:/Users/Tom/gnezdoui/src/docs/Grid.mdx"],"names":["Colors","styled","div","fluid","color","theme","shadows","basic","radiuses","Grid","Row","Col","Heading","h","Spacer","HighlightStyler","language","JSON","stringify","breakpoints","Array","keys","map","item","i","key","sm","md","lg","Opacity","opacity","opacities","op32","colors","red","primary","GridBounds","Text","spacings","m","gray","white","layoutProps","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"iYAAA,0CACA,iFAEA,4BAEaA,EAASC,UAAOC,IAAV,wCAAGD,CAAH,2HAER,qBAAGE,MAAqB,OAAS,UAChC,qBAAGA,MAAqB,OAAS,UAC7B,qBAAGC,SACH,kBAAyB,SAAzB,EAAGA,OAAgCC,QAAMC,QAAQC,QAC9CF,QAAMG,SAASD,O,k6BCVlC,wCACA,iFACA,kDAEA,qCAEA,4BACA,0BAIaE,EAAO,WAClB,OACE,wBAAC,EAAAC,IAAD,KACE,wBAAC,EAAAC,IAAD,KACE,wBAAC,EAAAC,QAAD,CAASC,EAAG,GAAZ,eACA,wBAAC,EAAAC,OAAD,MACA,wBAACC,EAAD,KACE,wBAAC,UAAD,CAAWC,SAAS,cAAcC,KAAKC,UAAUb,QAAMc,YAAa,KAAM,OAE5E,wBAAC,EAAAL,OAAD,QAED,aAAIM,MAbM,IAaUC,QAAQC,KAAI,SAACC,EAAMC,GACtC,OACE,wBAAC,EAAAb,IAAD,CAAKc,IAAKD,EAAGE,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC5B,wBAAC,EAAAC,QAAD,CAASC,QAASzB,QAAM0B,UAAUC,MAChC,wBAAC,EAAAhC,OAAD,CAAQI,MAAOC,QAAM4B,OAAOC,IAAIC,QAAShC,OAAK,GAC5C,wBAACiC,EAAD,KACE,wBAAC,EAAAC,KAAD,KAAOb,EAAI,MAIjB,wBAAC,EAAAV,OAAD,UAIN,wBAAC,EAAAH,IAAD,KACE,wBAAC,EAAAG,OAAD,OAEF,wBAAC,EAAAH,IAAD,KACE,wBAAC,EAAAkB,QAAD,CAASC,QAASzB,QAAM0B,UAAUC,MAChC,wBAAC,EAAAhC,OAAD,CAAQI,MAAOC,QAAM4B,OAAOC,IAAIC,QAAShC,OAAK,GAC5C,wBAACiC,EAAD,KACE,wBAAC,EAAAC,KAAD,2EACmB,yEADnB,uG,kLAWd,IAAMtB,EAAkBd,UAAOC,IAAV,wCAAGD,CAAH,sNACRI,QAAMiC,SAASC,EACNlC,QAAM4B,OAAOO,KAAKL,QAC7B9B,QAAM4B,OAAOQ,MAUXpC,QAAM4B,OAAOC,IAAIC,QAIjB,UAIA9B,QAAM4B,OAAOQ,OAIbL,EAAanC,UAAOC,IAAV,wCAAGD,CAAH,mFAKZI,QAAM4B,OAAOQ,O,4pBCnFtB,GADA,sCACA,oDAGF,GADA,2CACA,gCAOMC,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,kCADR,mCAGA,cAAQ,CACN,GAAM,YADR,aAGA,SAAC,EAAArC,KAAD,CAAMqC,QAAQ,U,yKAIlBH,EAAWI,gBAAiB","file":"static/js/src-docs-grid.0f144fe4.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { theme } from 'theme'\n\nexport const Colors = styled.div`\n  min-height: 64px;\n  width: ${({ fluid }) => (fluid ? '100%' : '64px')};\n  height: ${({ fluid }) => (fluid ? '100%' : '64px')};\n  background: ${({ color }) => color};\n  box-shadow: ${({ color }) => color === '#FFF' && theme.shadows.basic};\n  border-radius: ${theme.radiuses.basic}px;\n  flex-wrap: wrap;\n  cursor: pointer;\n`\n","/* eslint-disable no-magic-numbers */\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Highlight from 'react-highlight'\n\nimport { Colors } from './../colors/Colors'\n\nimport { theme } from 'theme'\nimport { Container, Row, Col, Opacity, Spacer, Text, Heading } from 'lib'\n\nconst gridSize = 12\n\nexport const Grid = () => {\n  return (\n    <Row>\n      <Col>\n        <Heading h={4}>Breakpoints</Heading>\n        <Spacer />\n        <HighlightStyler>\n          <Highlight language=\"javascript\">{JSON.stringify(theme.breakpoints, null, ' ')}</Highlight>\n        </HighlightStyler>\n        <Spacer />\n      </Col>\n      {[...Array(gridSize).keys()].map((item, i) => {\n        return (\n          <Col key={i} sm=\"6\" md=\"4\" lg=\"1\">\n            <Opacity opacity={theme.opacities.op32}>\n              <Colors color={theme.colors.red.primary} fluid>\n                <GridBounds>\n                  <Text>{i + 1}</Text>\n                </GridBounds>\n              </Colors>\n            </Opacity>\n            <Spacer />\n          </Col>\n        )\n      })}\n      <Col>\n        <Spacer />\n      </Col>\n      <Col>\n        <Opacity opacity={theme.opacities.op32}>\n          <Colors color={theme.colors.red.primary} fluid>\n            <GridBounds>\n              <Text>\n                1-12 Колонка без <b>пропов</b> занимает весь ряд\n              </Text>\n            </GridBounds>\n          </Colors>\n        </Opacity>\n      </Col>\n    </Row>\n  )\n}\n\nconst HighlightStyler = styled.div`\n  padding: ${theme.spacings.m}px;\n  background-color: ${theme.colors.gray.primary};\n  color: ${theme.colors.white};\n  border-radius: 4px;\n\n  .hljs-number,\n  .hljs-meta,\n  .hljs-built_in,\n  .hljs-builtin-name,\n  .hljs-literal,\n  .hljs-type,\n  .hljs-params {\n    color: ${theme.colors.red.primary};\n  }\n\n  .hljs {\n    color: ${'#ffb6b6'};\n  }\n\n  .hljs-attr {\n    color: ${theme.colors.white};\n  }\n`\n\nexport const GridBounds = styled.div`\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${theme.colors.white};\n`\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { Grid } from 'playground/grid/Grid'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"сетка\"\n    }}>{`Сетка`}</h1>\n    <h2 {...{\n      \"id\": \"css-grid\"\n    }}>{`CSS Grid`}</h2>\n    <Grid mdxType=\"Grid\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}