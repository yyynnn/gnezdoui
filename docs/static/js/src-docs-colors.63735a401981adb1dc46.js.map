{"version":3,"sources":["C:/Users/Tom/gnezdoui/playground/colors/ColorCard.js","C:/Users/Tom/gnezdoui/playground/colors/ColorMap.js","C:/Users/Tom/gnezdoui/playground/colors/Colors.js","C:/Users/Tom/gnezdoui/src/docs/Colors.mdx"],"names":["Card","children","text","InnerWrapper","styled","div","ColorMap","Row","Object","keys","theme","colors","map","key","index","Col","lg","If","condition","Then","Heading","h","capitalize","innerkey","innerindex","Padding","Colors","color","Spacer","space","spacings","xs2","Text","fluid","shadows","basic","radiuses","layoutProps","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"kYAAA,4CACA,iFAEaA,EAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC/B,OACE,mCACE,wBAACC,EAAD,KAAeF,GACdC,I,yLAKP,IAAMC,EAAeC,UAAOC,IAAV,wCAAGD,CAAH,mC,sbCZlB,4CACA,iFACA,8CAEA,qCACA,wCAEA,0BAEaE,EAAW,WACtB,OACE,wBAAC,EAAAC,IAAD,KACGC,OAAOC,KAAKC,QAAMC,QAAQC,KAAI,SAACC,EAAKC,GACnC,OACE,wBAAC,EAAAC,IAAD,CAAKF,IAAKC,EAAOE,GAAG,KAClB,wBAAC,EAAAC,GAAD,CAAIC,UAAwC,kBAAtBR,QAAMC,OAAOE,IACjC,wBAAC,EAAAM,KAAD,KACE,wBAAC,EAAAC,QAAD,CAASC,EAAG,EAAGC,YAAU,GACtBT,GAEH,wBAAC,EAAAb,KAAD,KACGQ,OAAOC,KAAKC,QAAMC,OAAOE,IAAMD,KAAI,SAACW,EAAUC,GAC7C,OACE,wBAACC,EAAD,CAASZ,IAAKW,GACZ,wBAAC,EAAAE,OAAD,CAAQC,MAAOjB,QAAMC,OAAOE,GAAKU,KACjC,wBAAC,EAAAK,OAAD,CAAQC,MAAOnB,QAAMoB,SAASC,MAC9B,wBAAC,EAAAC,KAAD,KAAOtB,QAAMC,OAAOE,GAAKU,SAKjC,wBAAC,EAAAK,OAAD,CAAQC,MAAOnB,QAAMoB,SAASC,c,gMAU9C,IAAMN,EAAUrB,UAAOC,IAAV,wCAAGD,CAAH,mB,wUCzCb,0CACA,iFAEA,4BAEasB,EAAStB,UAAOC,IAAV,wCAAGD,CAAH,2HAER,qBAAG6B,MAAqB,OAAS,UAChC,qBAAGA,MAAqB,OAAS,UAC7B,qBAAGN,SACH,kBAAyB,SAAzB,EAAGA,OAAgCjB,QAAMwB,QAAQC,QAC9CzB,QAAM0B,SAASD,O,0pBCThC,GADA,sCACA,oDAGF,GADA,2CACA,sCAOME,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,kCADR,mCAGA,SAAC,EAAAnC,SAAD,CAAUmC,QAAQ,c,2KAItBH,EAAWI,gBAAiB","file":"static/js/src-docs-colors.8bdfc36a.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport const Card = ({ children, text }) => {\n  return (\n    <div>\n      <InnerWrapper>{children}</InnerWrapper>\n      {text}\n    </div>\n  )\n}\n\nconst InnerWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { If, Then } from 'react-if'\n\nimport { Colors } from './Colors'\nimport { Card } from './ColorCard'\n\nimport { Spacer, Text, Heading, Col, Container, Row, theme } from 'lib'\n\nexport const ColorMap = () => {\n  return (\n    <Row>\n      {Object.keys(theme.colors).map((key, index) => {\n        return (\n          <Col key={index} lg=\"6\">\n            <If condition={typeof theme.colors[key] !== 'string'}>\n              <Then>\n                <Heading h={2} capitalize>\n                  {key}\n                </Heading>\n                <Card>\n                  {Object.keys(theme.colors[key]).map((innerkey, innerindex) => {\n                    return (\n                      <Padding key={innerindex}>\n                        <Colors color={theme.colors[key][innerkey]} />\n                        <Spacer space={theme.spacings.xs2} />\n                        <Text>{theme.colors[key][innerkey]}</Text>\n                      </Padding>\n                    )\n                  })}\n                </Card>\n                <Spacer space={theme.spacings.xs2} />\n              </Then>\n            </If>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nconst Padding = styled.div`\n  padding: 8px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { theme } from 'theme'\n\nexport const Colors = styled.div`\n  min-height: 64px;\n  width: ${({ fluid }) => (fluid ? '100%' : '64px')};\n  height: ${({ fluid }) => (fluid ? '100%' : '64px')};\n  background: ${({ color }) => color};\n  box-shadow: ${({ color }) => color === '#FFF' && theme.shadows.basic};\n  border-radius: ${theme.radiuses.basic}px;\n  flex-wrap: wrap;\n  cursor: pointer;\n`\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { ColorMap } from 'playground/colors/ColorMap'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"цвета\"\n    }}>{`Цвета`}</h1>\n    <ColorMap mdxType=\"ColorMap\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}