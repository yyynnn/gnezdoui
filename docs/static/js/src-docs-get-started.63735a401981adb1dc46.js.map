{"version":3,"sources":["C:/Users/Tom/gnezdoui/src/docs/GetStarted.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2kBAEE,GADA,sCACA,oDAUIA,GAPN,2CAOoB,IAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,6EADR,8EAGA,cAAQ,CACN,GAAM,gBADR,iBAGA,qBAAK,+BAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,wBAIL,+CAAiC,mBAAQA,WAAW,KAAnB,OAAjC,yBACA,cAAQ,CACN,GAAM,WADR,YAGA,iGACA,qBAAK,+BAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mDAML,cAAQ,CACN,GAAM,kBADR,mBAGA,gFACA,oBACE,eAAIA,WAAW,MAAf,+BAAmD,mBAAQA,WAAW,MAAnB,qBAAnD,KAA8G,uBAAYA,WAAW,MAAvB,mBAA9G,iCAEF,qBAAK,+BAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wLAWL,oBACE,eAAIA,WAAW,MAAf,uEAEF,qBAAK,+BAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uIAML,oBACE,eAAIA,WAAW,MAAf,6DAEF,qBAAK,+BAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,kVAeL,cAAQ,CACN,GAAM,sBADR,uBAGA,wDACA,qBAAK,+BAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sBAIL,8BAAe,uBAAYA,WAAW,KAAvB,cAAf,yD,+KAIJJ,EAAWK,gBAAiB","file":"static/js/src-docs-get-started.f3ee6ce9.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"начало-работы\"\n    }}>{`Начало работы`}</h1>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm add gneznoui\n`}</code></pre>\n    <p>{`*`}{`Aye, capt'n, there's `}<strong parentName=\"p\">{`add`}</strong>{` command in our npm!`}</p>\n    <h2 {...{\n      \"id\": \"dot-env\"\n    }}>{`Dot env`}</h2>\n    <p>{`To start up create an .env file in project's root whit this prerequisites:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`PORT=666\nDOCZ_PORT=667\nAPP_ID=gnezdo_docz\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"getting-set-up\"\n    }}>{`Getting set up`}</h2>\n    <p>{`To start using the components, please follow these steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Wrap your application in a `}<strong parentName=\"li\">{`styled-components`}</strong>{` `}<inlineCode parentName=\"li\">{`<ThemeProvider>`}</inlineCode>{` and provide it with theme:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { ThemeProvider } from 'styled-components'\nimport { theme } from 'gneznoui'\n\nconst Root = () => (\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Then start using components. And you can access theme from props:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Button } from 'gneznoui'\n\nconst App = props => <Button style={{ color: props.theme.colors.pink }}>PRESS ME!</Button>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Or just import it straight from the lib to avoid bloat:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Button, theme } from 'gneznoui'\nimport styled from 'styled-components'\n\nconst App = props => <StyledButton>PRESS ME!</StyledButton>\n\nconst StyledButton = styled(Button)\\`\n  color: \\${theme.colors.pink};\n\\`\n// instead of\n// const StyledButton = styled(Button)\\`\n//    color: \\${({ theme }) => theme.colors.pink};\n//\\`\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"after-work-is-done\"\n    }}>{`After work is done`}</h2>\n    <p>{`Write a conventional commit with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm run commit\n`}</code></pre>\n    <p>{`Regular `}<inlineCode parentName=\"p\">{`git commit`}</inlineCode>{` with simple message wont cut it, resulting in error`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}