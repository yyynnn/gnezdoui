{"version":3,"sources":["C:/Users/Tom/gnezdoui/src/lib/molecules/Checkbox/Checkbox.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","Playground","__position","__code","__scope","this","useState","Props","Checkbox","Spacer","Text","Heading","Col","Container","Row","__codesandbox","isChecked1","setChecked1","isChecked2","setChecked2","isChecked3","setChecked3","isChecked4","setChecked4","isChecked5","setChecked5","checkboxHandler2","Fragment","size","disabled","checkboxHandler","isChecked","hint","name","href","error","errorMessage","indeterminate","of","isMDXComponent"],"mappings":"iqBACE,wCACA,qDAGF,6CACA,0BAOMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,YADR,aAGA,cAAQ,CACN,GAAM,WADR,YAGA,SAAC,EAAAC,WAAD,CAAYC,WAAY,EAAGC,OAAQ,qnEAAspEC,QAAS,CAChsEL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,oBACAL,wBACAM,cACAC,oBACAC,gBACAC,YACAC,kBACAC,UACAC,sBACAC,WACCC,cAAa,mjFAAsjFf,QAAQ,eAC3kF,WAAO,IAAD,GAC6B,IAAAM,WAAS,GADtC,qBACEU,EADF,KACcC,EADd,QAE6B,IAAAX,WAAS,GAFtC,qBAEEY,EAFF,KAEcC,EAFd,QAG6B,IAAAb,WAAS,GAHtC,qBAGEc,EAHF,KAGcC,EAHd,QAI6B,IAAAf,WAAS,GAJtC,qBAIEgB,EAJF,KAIcC,EAJd,QAK6B,IAAAjB,WAAS,GALtC,qBAKEkB,EALF,KAKcC,EALd,KAWCC,EAAmB,WACvBP,GAAaD,IAef,OAAO,SAAC,UAAMS,SAAP,MACP,SAAC,EAAAnB,SAAD,CAAUoB,KAAK,KAAKC,UAAQ,EAACC,gBATJ,WACvBP,GAAaD,IAQiDS,UAAWT,EAAYU,KAAK,cAAcC,KAAK,sBAAsBjC,QAAQ,YAA7I,aAGA,SAAC,EAAAS,OAAD,CAAQT,QAAQ,YAChB,SAAC,EAAAQ,SAAD,CAAUoB,KAAK,KAAKE,gBAAiBJ,EAAkBK,UAAWb,EAAYe,KAAK,sBAAsBjC,QAAQ,YAAjH,gBAGA,SAAC,EAAAS,OAAD,CAAQT,QAAQ,YAChB,SAAC,EAAAQ,SAAD,CAAUoB,KAAK,KAAKE,gBAAiBJ,EAAkBK,UAAWb,EAAYe,KAAK,sBAAsBjC,QAAQ,YAAjH,gBAGA,SAAC,EAAAS,OAAD,CAAQT,QAAQ,YAChB,SAAC,EAAAQ,SAAD,CAAUoB,KAAK,KAAKE,gBAjCK,WACvBb,GAAaD,IAgCwCe,UAAWf,EAAYgB,KAAK,cAAcC,KAAK,sBAAsBjC,QAAQ,YAApI,UACQ,cAAGkC,KAAK,qBAAR,eADR,WAGA,SAAC,EAAAzB,OAAD,CAAQT,QAAQ,YAChB,SAAC,EAAAQ,SAAD,CAAUoB,KAAK,KAAKO,OAAO,EAAML,gBA7BR,WACvBT,GAAaD,IA4BqDW,UAAWX,EAAYa,KAAK,sBAAsBG,aAAa,oBAAoBpC,QAAQ,YAA/J,aAGA,SAAC,EAAAS,OAAD,CAAQT,QAAQ,YAChB,SAAC,EAAAQ,SAAD,CAAUoB,KAAK,KAAKE,gBAzBK,WACvBL,GAAaD,IAwBwCO,UAAWP,EAAYS,KAAK,sBAAsBI,eAAa,EAACrC,QAAQ,YAA/H,sBAMJ,cAAQ,CACN,GAAM,SADR,UAGA,SAAC,EAAAO,MAAD,CAAO+B,GAAI9B,WAAUR,QAAQ,W,iMAIjCH,EAAW0C,gBAAiB","file":"static/js/src-lib-molecules-checkbox-checkbox.31eeb2ae.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react'\nimport { Playground, Props } from 'docz'\nimport { Checkbox, Spacer, Text, Heading, Col, Container, Row } from 'lib'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <h2 {...{\n      \"id\": \"primary\"\n    }}>{`Primary`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [isChecked1, setChecked1] = useState(false)\\n  const [isChecked2, setChecked2] = useState(true)\\n  const [isChecked3, setChecked3] = useState(false)\\n  const [isChecked4, setChecked4] = useState(true)\\n  const [isChecked5, setChecked5] = useState(true)\\n  const checkboxHandler1 = () => {\\n    setChecked1(!isChecked1)\\n  }\\n  const checkboxHandler2 = () => {\\n    setChecked2(!isChecked2)\\n  }\\n  const checkboxHandler3 = () => {\\n    setChecked3(!isChecked3)\\n  }\\n  const checkboxHandler4 = () => {\\n    setChecked4(!isChecked4)\\n  }\\n  const checkboxHandler5 = () => {\\n    setChecked5(!isChecked5)\\n  }\\n  return (\\n    <React.Fragment>\\n      <Checkbox\\n        size=\\\"sm\\\"\\n        disabled\\n        checkboxHandler={checkboxHandler4}\\n        isChecked={isChecked4}\\n        hint=\\\"Useful hint\\\"\\n        name=\\\"My beloved checkbox\\\"\\n      >\\n        Disabled\\n      </Checkbox>\\n      <Spacer />\\n      <Checkbox\\n        size=\\\"sm\\\"\\n        checkboxHandler={checkboxHandler2}\\n        isChecked={isChecked2}\\n        name=\\\"My beloved checkbox\\\"\\n      >\\n        Hello world\\n      </Checkbox>\\n      <Spacer />\\n      <Checkbox\\n        size=\\\"sm\\\"\\n        checkboxHandler={checkboxHandler2}\\n        isChecked={isChecked2}\\n        name=\\\"My beloved checkbox\\\"\\n      >\\n        Hello world\\n      </Checkbox>\\n      <Spacer />\\n      <Checkbox\\n        size=\\\"sm\\\"\\n        checkboxHandler={checkboxHandler1}\\n        isChecked={isChecked1}\\n        hint=\\\"Useful hint\\\"\\n        name=\\\"My beloved checkbox\\\"\\n      >\\n        Hello <a href=\\\"https://gnezno.ru\\\">link inside</a> world\\n      </Checkbox>\\n      <Spacer />\\n      <Checkbox\\n        size=\\\"md\\\"\\n        error={true}\\n        checkboxHandler={checkboxHandler3}\\n        isChecked={isChecked3}\\n        name=\\\"My beloved checkbox\\\"\\n        errorMessage=\\\"Error description\\\"\\n      >\\n        Required\\n      </Checkbox>\\n      <Spacer />\\n      <Checkbox\\n        size=\\\"md\\\"\\n        checkboxHandler={checkboxHandler5}\\n        isChecked={isChecked5}\\n        name=\\\"My beloved checkbox\\\"\\n        indeterminate\\n      >\\n        Indeterminate\\n      </Checkbox>\\n    </React.Fragment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Checkbox,\n      Spacer,\n      Text,\n      Heading,\n      Col,\n      Container,\n      Row\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYBcjgGBnAILJ2HkV1jXlM0_X5O1IPYAAFKBXESFIhFCDAlmwgc7CQo1ZXaA8AC90Ig9goPsTYdmqJZnBmCUMiWSxsAIJYAAlxRYGclkcKBxOA1w0B49gRVGRDkOoqAIA8BjMPkzVlJNTV2jBVBdBRY5TlouDEixdhuCY9YogEZ5UCudoAAZ2CTGYsHaPdqy4zsCicgAWDz2AANg8rz1jAYCADFvWgRInP4ZxDgRB1MBwoR-CWIhqEoOAuIRCLqyimhnAgWjLnYABGALvPkAyjKmABBOYrPYCMoPIGwoHQMNEI5KyxHa6MZHYFELJgbhgDo8ysXkLca2ALroF64IADI1vGRJ5koZplp6vruCOuUwGIyUBlQdp2AAfg2FawwjAarn21bUHq6spBkKs3zMGF1WOGAwDCKApkewbho-lrl2rCxgDB7ghuAFcLEa9gAG1bBYrZtmyKqlhgggsZ2XGAF02ryWD4NoCMgagGC3xrGtUYxuAiZx9AACZ8dHNnsg5snrIpuCsgjVEGQZxnC1QYyWd59Ak25wnWPZpMBegymRdp-nkalmXMeV7JarGnmDfQAK1aFqmYFFtEYAlxnmf17HsgAVkVuWXYtmDhepsW7Z11Guux6pBMqWABCqtr4cRnWLAJuWqojABCJ3ifQKr7Zrd7Jd1qYg7Y7xQ4wcOOajgaEZsmHJfj02OeT1P2Y5zOLGzyXA-VkOw4yJMy_BpGq8Zmvnfl-vWdNpNm8QgPqGM_Ptk74uMgC3uK_7nO45N4eAtHuWAsn1uHZnvOO8LruBBdleY4Hmsh7Tl2d9Nl3951roCD6cwo2vhNA0lHBosyFIV4CALXXquE-WBY7V3KpNfgcAiD8EgYzFgFQPCwHQIgpm4Ci7oHDlNOeC8cFLwPqAzgY9h5TQbobYhoCbA0D4CAAAqjBU6UBfBoFECADBFhUDehgSAPUyRAhQEoKwXM-DvAIK_jWEBJCtS2FcKg7IGCpBs2qDInOjBOLcSOJuZRqiJFSMHtA-hcDJEkMwcHU-i8BB4KwWfDm1D16UJ4MAZxDiuHsB4UeehAj2BCJEWI8BZiSHqPXsJBIw4RhCh6soyQ-isChMZpogqGR2C6MMWAyxECMlx2MbA-BnCckbCydg3BS07HWPcUU5xFCyFpyqeY7hvCfGCPnAEnI4iIGFPMYkyW4ThF5miegjJKjwG9ITFohEOjxmZILtkxpY08kgFMd0xpnTSkZFsSUs-VVHE5xqa4up7NdkeNoQQehTDAahFYWc4J5ivF8N8f40RHSgmrNATMiw_ThyMFcL4LoYB6GEFuPcR4KRnS0VQJQUMoRxCqVQLsNA-RMBSFcENKJAgYkjLiWM5RkzUnpPMYweJHj8gVXoUQdB7ySEZCEDY4Afs9ltwqYQ-l6yz5JiZYzA5zjOUeIeS0vxbSXnFLmXcmlAg6V6ngBUNI9CzySqFADOA5B-gzG7P6alOdPlaQAI6hAgF0YZRKcVZJmck7RaTzUkqKWSvhlLxWgPZdYrZcyNnny5TWHlRzXaeqad4_gTzhWBKyY6px4ZaACCIGgLIGCdUNAjRkaNPDaCxPib0qQP8CB_wAUA0Jmd5CtykFDb6ZgvwgAKtsVwaR_xwGoIBXQIEDBgTXuwfgDz-BXH4D8Ys1QMjmh_GSRkIBvIWH4KIgQ-RqCdrbSAZyOB53OSyusfg5RVUQHVRdGd_AmqLN_NCLA3oh0AzJJQRIuY8gFAnJqc0Pa_ilmXdWfgUQ0DbpUOGDQcBH1jpAJgeY4ZDIQHgDO1tP7TSSjfQAPSqiFHAAAOHAIVv01lXaZKDVUcAcwXchsDN6rTodgwhpDqz3ryHLb27wHxqCQBSLW-t2hG36AYEjEAtAfSxqQN200tBzTgYtLMGY_AyOFvkEAA`} mdxType=\"Playground\">\n      {() => {\n        const [isChecked1, setChecked1] = useState(false);\n        const [isChecked2, setChecked2] = useState(true);\n        const [isChecked3, setChecked3] = useState(false);\n        const [isChecked4, setChecked4] = useState(true);\n        const [isChecked5, setChecked5] = useState(true);\n\n        const checkboxHandler1 = () => {\n          setChecked1(!isChecked1);\n        };\n\n        const checkboxHandler2 = () => {\n          setChecked2(!isChecked2);\n        };\n\n        const checkboxHandler3 = () => {\n          setChecked3(!isChecked3);\n        };\n\n        const checkboxHandler4 = () => {\n          setChecked4(!isChecked4);\n        };\n\n        const checkboxHandler5 = () => {\n          setChecked5(!isChecked5);\n        };\n\n        return <React.Fragment>\n        <Checkbox size=\"sm\" disabled checkboxHandler={checkboxHandler4} isChecked={isChecked4} hint=\"Useful hint\" name=\"My beloved checkbox\" mdxType=\"Checkbox\">\n          Disabled\n        </Checkbox>\n        <Spacer mdxType=\"Spacer\" />\n        <Checkbox size=\"sm\" checkboxHandler={checkboxHandler2} isChecked={isChecked2} name=\"My beloved checkbox\" mdxType=\"Checkbox\">\n          Hello world\n        </Checkbox>\n        <Spacer mdxType=\"Spacer\" />\n        <Checkbox size=\"sm\" checkboxHandler={checkboxHandler2} isChecked={isChecked2} name=\"My beloved checkbox\" mdxType=\"Checkbox\">\n          Hello world\n        </Checkbox>\n        <Spacer mdxType=\"Spacer\" />\n        <Checkbox size=\"sm\" checkboxHandler={checkboxHandler1} isChecked={isChecked1} hint=\"Useful hint\" name=\"My beloved checkbox\" mdxType=\"Checkbox\">\n          Hello <a href=\"https://gnezno.ru\">link inside</a> world\n        </Checkbox>\n        <Spacer mdxType=\"Spacer\" />\n        <Checkbox size=\"md\" error={true} checkboxHandler={checkboxHandler3} isChecked={isChecked3} name=\"My beloved checkbox\" errorMessage=\"Error description\" mdxType=\"Checkbox\">\n          Required\n        </Checkbox>\n        <Spacer mdxType=\"Spacer\" />\n        <Checkbox size=\"md\" checkboxHandler={checkboxHandler5} isChecked={isChecked5} name=\"My beloved checkbox\" indeterminate mdxType=\"Checkbox\">\n          Indeterminate\n        </Checkbox>\n      </React.Fragment>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}