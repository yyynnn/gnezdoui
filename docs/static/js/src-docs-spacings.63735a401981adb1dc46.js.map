{"version":3,"sources":["C:/Users/Tom/gnezdoui/playground/spacing/Spacings.js","C:/Users/Tom/gnezdoui/src/docs/Spacings.mdx"],"names":["Spacings","Row","Object","keys","theme","spacings","map","key","i","value","Col","lg","SpacerColor","space","Spacer","Text","Heading","h","slice","spacemob","styled","div","colors","red","primary","radiuses","basic","layoutProps","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"gnBACA,wCACA,iFAEA,4BACA,0BAEaA,EAAW,WACtB,OACE,wBAAC,EAAAC,IAAD,KACGC,OAAOC,KAAKC,QAAMC,UAAUC,KAAI,SAACC,EAAKC,GACrC,IAAMC,EAAQL,QAAMC,SAASE,GAC7B,OACE,wBAAC,EAAAG,IAAD,CAAKH,IAAKA,EAAKI,GAAG,KAChB,wBAACC,EAAD,CAAaC,MAAOJ,GAClB,wBAAC,EAAAK,OAAD,CAAQD,MAAOJ,KAEjB,wBAAC,EAAAM,KAAD,KAAON,EAAP,UAIN,wBAAC,EAAAC,IAAD,KACE,wBAAC,EAAAI,OAAD,MACA,wBAAC,EAAAE,QAAD,CAASC,EAAG,GAAZ,yCACA,wBAAC,EAAAH,OAAD,OAEDZ,OAAOC,KAAKC,QAAMC,UAChBa,MAAM,EAAG,GACTZ,KAAI,SAACC,EAAKC,GACT,IAAMC,EAAQL,QAAMC,SAASE,GAC7B,OACE,wBAAC,EAAAG,IAAD,CAAKH,IAAKA,EAAKI,GAAG,KAChB,wBAACC,GAAD,cAAaC,OAAK,GAAlB,QAA0BJ,GACxB,wBAAC,EAAAK,OAAD,CAAQD,MAAOJ,EAAOU,SAAU,MAElC,wBAAC,EAAAJ,KAAD,KAAON,EAAP,Y,iMAQd,IAAMG,EAAcQ,UAAOC,IAAV,wCAAGD,CAAH,qEACKhB,QAAMkB,OAAOC,IAAIC,QAGpBpB,QAAMqB,SAASC,Q,ycC7ChC,GADA,sCACA,oDAGF,GADA,2CACA,uCAOMC,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,8CADR,+CAGA,cAAQ,CACN,GAAM,sDADR,uDAGA,SAAC,EAAA/B,SAAD,CAAU+B,QAAQ,c,6KAItBH,EAAWI,gBAAiB","file":"static/js/src-docs-spacings.4aa2d507.js","sourcesContent":["/* eslint-disable no-magic-numbers */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { theme } from 'theme'\nimport { Spacer, Text, Col, Row, Heading } from 'lib'\n\nexport const Spacings = () => {\n  return (\n    <Row>\n      {Object.keys(theme.spacings).map((key, i) => {\n        const value = theme.spacings[key]\n        return (\n          <Col key={key} lg=\"2\">\n            <SpacerColor space={value}>\n              <Spacer space={value} />\n            </SpacerColor>\n            <Text>{value}px</Text>\n          </Col>\n        )\n      })}\n      <Col>\n        <Spacer />\n        <Heading h={4}>Responsive size (toggle mobile width)</Heading>\n        <Spacer />\n      </Col>\n      {Object.keys(theme.spacings)\n        .slice(4, 8)\n        .map((key, i) => {\n          const value = theme.spacings[key]\n          return (\n            <Col key={key} lg=\"2\">\n              <SpacerColor space space={value}>\n                <Spacer space={value} spacemob={66} />\n              </SpacerColor>\n              <Text>{value}px</Text>\n            </Col>\n          )\n        })}\n    </Row>\n  )\n}\n\nconst SpacerColor = styled.div`\n  background-color: ${theme.colors.red.primary};\n  width: 100%;\n  opacity: 0.5;\n  border-radius: ${theme.radiuses.basic}px;\n`\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { Spacings } from 'playground/spacing/Spacings'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"отступы\"\n    }}>{`Отступы`}</h1>\n    <h2 {...{\n      \"id\": \"базовые-desktop\"\n    }}>{`Базовые Desktop`}</h2>\n    <Spacings mdxType=\"Spacings\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}