{"version":3,"sources":["C:/Users/Tom/gnezdoui/src/hooks/useHover.js","C:/Users/Tom/gnezdoui/src/hooks/useHover.mdx"],"names":["useHover","useState","isHovered","setHovered","onMouseEnter","e","onMouseLeave","name","layoutProps","MDXContent","components","props","mdxType","Playground","__position","__code","__scope","this","Props","__codesandbox","isHovering","bind","isMDXComponent"],"mappings":"ucAAA,qCAEaA,EAAW,WAAO,IAAD,GACI,IAAAC,WAAS,GADb,qBACrBC,EADqB,KACVC,EADU,KAQ5B,MAAO,CAACD,EALK,CACXE,aAAc,SAAAC,GAAC,OAAIF,GAAW,IAC9BG,aAAc,SAAAD,GAAC,OAAIF,GAAW,O,2nBCCZI,E,oJAPpB,wCACA,qDAGF,6CACA,+BAOMC,GALgBD,EAIU,YACZ,IAIL,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,YADR,aAGA,SAAC,EAAAC,WAAD,CAAYC,WAAY,EAAGC,OAAQ,2QAA4PC,QAAS,CACtSL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BV,oBACAY,wBACAK,cACAlB,qBACCmB,cAAa,YAAeP,QAAQ,eACxC,WAMK,OAAO,UALW,WAAO,IAAD,GACK,IAAAZ,YADL,qBACfoB,EADe,KACHC,EADG,KAEtB,OAAO,eAASA,EAAT,WAAwBD,EAAa,wBAAgB,4BAArD,eAGF,CAAWR,QAAQ,kB,8KAMlCH,EAAWa,gBAAiB","file":"static/js/src-hooks-use-hover.4101e594.js","sourcesContent":["import { useState } from 'react'\n\nexport const useHover = () => {\n  const [isHovered, setHovered] = useState(false)\n\n  const bind = {\n    onMouseEnter: e => setHovered(true),\n    onMouseLeave: e => setHovered(false)\n  }\n\n  return [isHovered, bind]\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react'\nimport { Playground, Props } from 'docz'\nimport { useHover } from './useHover'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Component = makeShortcode(\"Component\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"usehover\"\n    }}>{`useHover`}</h1>\n    <Playground __position={0} __code={'() => {\\n  const Component = () => {\\n    const [isHovering, bind] = useHover()\\n    return (\\n      <div {...bind}>\\n        You are {isHovering ? \\'Hovering ðŸ¦„\\' : \\'ðŸ™ˆ NOT hovering\\'} this div\\n      </div>\\n    )\\n  }\\n  return <Component />\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      useHover\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const Component = () => {\n          const [isHovering, bind] = useHover();\n          return <div {...bind}>You are {isHovering ? 'Hovering ðŸ¦„' : 'ðŸ™ˆ NOT hovering'} this div</div>;\n        };\n\n        return <Component mdxType=\"Component\" />;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}