{"version":3,"sources":["C:/Users/Tom/gnezdoui/src/hooks/useForce.js","C:/Users/Tom/gnezdoui/src/hooks/useForce.mdx"],"names":["reducer","state","_action","useForce","useReducer","dispatch","useCallback","name","layoutProps","MDXContent","components","props","mdxType","Playground","__position","__code","__scope","this","useState","Props","__codesandbox","forceUpdate","onClick","alert","isMDXComponent"],"mappings":"ucAAA,qCAEMA,EAAU,SAACC,EAAOC,GAAR,OAAqBD,GAExBE,EAAW,WAAO,IAAD,GACP,IAAAC,YAAWJ,GAAS,GAAhCK,GADmB,qBAM5B,OAHyB,IAAAC,cAAY,WACnCD,EAAS,QACR,CAACA,K,2nBCDgBE,E,+EAPpB,wCACA,qDAGF,6CACA,+BAOMC,GALgBD,EAIU,YACZ,IAIL,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,+BACD,OAAO,SALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cAAQ,CACN,GAAM,YADR,aAGA,SAAC,EAAAC,WAAD,CAAYC,WAAY,EAAGC,OAAQ,0QAA6QC,QAAS,CACvTL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,oBACAL,wBACAM,cACAhB,qBACCiB,cAAa,YAAeR,QAAQ,eACxC,WAYK,OAAO,UAXW,WAChB,IAAMS,GAAc,IAAAlB,YAOpB,OAAO,mBAAQmB,QALK,WAClBC,MAAM,yBACNF,MAGK,cAGF,CAAWT,QAAQ,kB,8KAMlCH,EAAWe,gBAAiB","file":"static/js/src-hooks-use-force.2783555a.js","sourcesContent":["import { useCallback, useReducer } from 'react'\n\nconst reducer = (state, _action) => !state\n\nexport const useForce = () => {\n  const [, dispatch] = useReducer(reducer, true)\n\n  const memoizedDispatch = useCallback(() => {\n    dispatch(null)\n  }, [dispatch])\n  return memoizedDispatch\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react'\nimport { Playground, Props } from 'docz'\nimport { useForce } from './useForce'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Component = makeShortcode(\"Component\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"useforce\"\n    }}>{`useForce`}</h1>\n    <Playground __position={0} __code={'() => {\\n  const Component = () => {\\n    const forceUpdate = useForce()\\n    const handleClick = () => {\\n      alert(\\'I will re-render now.\\')\\n      forceUpdate()\\n    }\\n    return <button onClick={handleClick}>PRESS ME</button>\\n  }\\n  return <Component />\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      useForce\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const Component = () => {\n          const forceUpdate = useForce();\n\n          const handleClick = () => {\n            alert('I will re-render now.');\n            forceUpdate();\n          };\n\n          return <button onClick={handleClick}>PRESS ME</button>;\n        };\n\n        return <Component mdxType=\"Component\" />;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}